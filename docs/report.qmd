---
---

```{r setup}
#| label: setup
#| echo: false
#| message: false
#| warning: false
# load objects
targets::tar_config_set(store = here::here("_targets"),
						script = here::here("_targets.R"))



targets::tar_load(
	c(participants,
	  stimuli,
	  vocabulary,
	  attrition_trials, 
	  attrition_participants,
	  bvq_data, 
	  gaze_aoi, 
	  data_time, 
	  data_aggr,
	))

targets::tar_load(
	c(model_fits_aggr,
	  model_fits_time
	  # model_loos_aggr,
	  # model_loos_time,
	))

# prepare data
attrition <- lst(participants,
				 attrition_participants,
				 attrition_trials) |> 
	reduce(inner_join, by = join_by(session_id)) |> 
	unnest_wider(matches("all"), names_sep = "_")

library(knitr)
library(kableExtra)
library(ggplot2)
library(gt)
library(patchwork)
library(english)
library(gtExtras)

# set ggplot theme and colour palette

my_theme <- theme_minimal() +
	theme(panel.grid = element_blank(),
		  axis.line = element_line(colour = "black"),
		  text = element_text(size = 12, colour = "black"),
		  axis.text = element_text(colour = "black"))

theme_set(my_theme)

clrs <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")

options(ggplot2.ordinal.fill = clrs[c(1, 4, 5)],
		ggplot2.ordinal.colour = clrs[c(1, 4, 5)],
		ggplot2.discrete.fill = clrs[c(1, 4, 5)],
		ggplot2.discrete.colour = clrs[c(1, 4, 5)],
		ggplot2.continuous.fill = ggplot2::scale_color_gradient,
		ggplot2.continuous.colour = ggplot2::scale_color_gradient)

set.seed(888)

```

# Participants

```{r tbl-participants}
#| label: tbl-partiicpants
#| tbl-cap: "Demographic and linguistic profile of participants."
participants |> 
	unnest_wider(doe) |> 
	select(-matches("others")) |> 
	mutate(lp = case_when(
		lp=="Monolingual" ~ "Monolingual (Catalan or Spanish)",
		lp=="Bilingual" ~ "Bilingual (Catalan-Spanish)",
		.default = lp)) |> 
	arrange(desc(lp)) |> 
	summarise(n = n(),
			  across(age, lst(mean, sd, min, max)),
			  across(matches("doe_"), lst(mean, sd)),
			  age_vctr = list(age),
			  .by = c(lp, test_language)) |> 
	gt(rowname_col = "test_language",
	   groupname_col = "lp") |> 
	gt_plt_dist(age_vctr, type = "histogram") |> 
	fmt_number(is.numeric, decimals = 1) |> 
	fmt_integer(n) |> 
	fmt_number(matches("doe"), decimals = 1, scale_by = 100) |> 
	cols_merge_range(age_min, age_max) |> 
	cols_merge(c(age_mean, age_sd), pattern = "{1} ({2})") |> 
	cols_merge(c(age_mean, age_sd), pattern = "{1} ({2})") |> 
	cols_merge(c(doe_catalan_mean, doe_catalan_sd), pattern = "{1} ({2})") |> 
	cols_merge(c(doe_english_mean, doe_english_sd), pattern = "{1} ({2})") |> 
	cols_merge(c(doe_spanish_mean, doe_spanish_sd), pattern = "{1} ({2})") |> 
	tab_spanner("Age (months)", matches("age")) |> 
	tab_spanner("Catalan", matches("catalan")) |> 
	tab_spanner("English", matches("english")) |> 
	tab_spanner("Spanish", matches("spanish")) |> 
	tab_spanner("Degree of Exposure (%)", matches("doe")) |> 
	cols_label(n = "N",
			   age_mean = "M (SD)",
			   age_min = "Range",
			   age_vctr = "Distribution",
			   doe_catalan_mean = "M (SD)",
			   doe_english_mean = "M (SD)",
			   doe_spanish_mean = "M (SD)") |> 
	tab_style(cell_text(style = "italic"),
			  cells_column_labels()) |> 
	tab_style(cell_text(weight = "bold"),
			  cells_column_spanners())
```

# Vocabulary size

```{r tbl-vocabulary}
#| label: tbl-vocabulary
#| tbl-cap: "Participant vocabulary sizes across ages and language profiles. Vocabulary size scores are presented using two measures: L1 vocabulary size (proportion of words marked as *Understands* in the vocabulary checklist of the dominant language), and total vocabulary size (proportion of words marked as *Understands* in vocabulary checklists of both dominant and non-dominant languages). Vocabulary size scores from the recurrent participants are shown linked."
#| eval: false
vocabulary |> 
	inner_join(select(participants, child_id, session_id, age, lp),
			   by = join_by(child_id, session_id)) |> 
	pivot_longer(c(total_prop, l1_prop),
				 names_to = "measure",
				 values_to = "prop",
				 names_transform = \(x) gsub("_prop", "", x)) |> 
	mutate(lp = case_when(
		lp=="Monolingual" ~ "Monolingual (Catalan or Spanish)",
		lp=="Bilingual" ~ "Bilingual (Catalan-Spanish)",
		.default = lp) |> 
			factor(levels = c("Monolingual (English)",
							  "Monolingual (Catalan or Spanish)",
							  "Bilingual (Catalan-Spanish)")),
		measure = if_else(measure=="l1", 
						  "L1 vocabulary", 
						  "Total vocabulary"),
		is_imputed = if_else(is_imputed, "Imputed", "Observed") |> 
			factor(levels = c("Observed", "Imputed"))) |> 
	ggplot(aes(age, prop, colour = is_imputed)) +
	facet_grid(measure ~ lp) +
	geom_line(aes(group = child_id),
			  alpha = 1/2,
			  colour = "grey") +
	geom_point() +
	labs(x = "Age (months)",
		 y = "Vocabulary size (%)") +
	theme(panel.grid = element_line(linetype = "dotted",
									colour = "grey"),
		  legend.position = "right",
		  legend.title = element_blank())
```

# Results

## Observed data

## Model-based estimates

### Aggregated analyses

```{r fig-related-aggregated}
#| label: fig-related-aggregated
#| fig-cap: "A) Aggregated probability of target looking for related and unrelated trials. Each point represents the mean probability of target looking for one participant in one testing session. Lines link observations from the same testing session across conditions. Black dots and errorbars indicate the mean and 95% CrI. B) Aggregated probability of target looking across ages for related and unrelated trials. Lines and error bands indicate the mean and standard error of the mean."
plot_agg_epreds <- function(newdata, object) {
	
	epreds <- add_epred_draws(newdata = newdata,
							  object = object,
							  re_formula = NA)
	return(mean_qi(epreds))
}

voc_values <- c(0.25, 0.5, 0.75, 1.00)
age_values <- c(21, 25, 30)

nd_0 <- expand(data_aggr, lp, condition, age = age_values)
nd_1 <- expand(data_aggr, lp, condition, voc_l1 = voc_values)
nd_2 <- expand(data_aggr, lp, condition, voc_total = voc_values)

epreds <- map2(.x = list(nd_0, nd_1, nd_2),
			   .y = model_fits_aggr,
			   .f = plot_agg_epreds) |> 
	map(\(x) {
		mutate(x, 
			   across(matches("voc"),
			   	   \(x) factor(x = x, 
			   	   			levels = voc_values,
			   	   			labels = scales::percent(voc_values))),
			   across(matches("age"),
			   	   \(x) factor(x = x,
			   	   			levels = age_values,
			   	   			labels = age_values)))
	}) |> 
	map(\(x) rename_with(x, \(x) gsub("age|voc_total|voc_l1", "var", x))) |> 
	set_names(names(model_fits_aggr))

plot_epreds <- function(data, x) {
	data |> 
		ggplot(aes(var, .epred, 
				   colour = condition,
				   fill = condition)) +
		facet_wrap(~lp, scales = "free_x") +
		geom_hline(yintercept = 0,
				   linetype = "dashed") +
		geom_errorbar(aes(ymin = .lower,
						  ymax = .upper),
					  width = 0.5,
					  linewidth = 3/4,
					  position = position_dodge(width = 0.5)) +
		geom_point(position = position_dodge(width = 0.5),
				   size = 2)
}

plot_epreds(epreds$fit_aggr_0) +
	labs(x = "Age (months)") +
	plot_epreds(epreds$fit_aggr_1) +
	labs(x = "L1 vocabulary size") +
	theme(strip.text = element_blank()) +
	plot_epreds(epreds$fit_aggr_2) +
	theme(strip.text = element_blank()) +
	labs(x = "Total vocabulary size") +
	plot_layout(ncol = 1, guides = "collect") &
	labs(y = "Logit (Target looking)",
		 colour = "Condition",
		 fill = "Condition") &
	theme(legend.position = "top",
		  panel.grid.major.y = element_line(colour = "grey",
		  								  linetype = "dotted"))

```

### Time course analyses

```{r fig-time-total}
#| label: fig-time-total
#| fig-height: 6
#| fig-width: 8
#| fig-cap: "Marginal posterior predictions of the GAMMs in Analysis 1. (A) Mean posterior probability of target looking across the time course of the trial. Black lines and intervals indicate the psoterior mean and 95% credible intervals. Points indicate the mean probability of target looking across participants. (B) Difference in posterior probability of target looking between *related* and *unrelated* trials. The yellow rectangle indicates, in both A and B, the range of time points in which the 95% credible interval of the differences excluded zero."
voc_values <- seq(0.25, 1, 0.25)

nd <- expand_grid(condition = levels(model_fits_time$fit_time_2$data$condition),
				  timebin = seq(0, 17, length.out = 100),
				  voc_total = voc_values,
				  # sesion_id = first(data$session_id),
				  # age = c(21, 25, 30),
				  lp = levels(model_fits_time$fit_time_2$data$lp)) 

epreds <- add_epred_draws(newdata = nd,
						  object = model_fits_time$fit_time_2,
						  ndraws = 20,
						  re_formula = NA,
						  value = ".value") |> 
	mean_qi() |> 
	mutate(lp = factor(lp, 
					   levels = c("Monolingual (English)",
					   		   "Monolingual",
					   		   "Bilingual")),
		   voc_total = factor(x = voc_total, 
		   				   levels = voc_values,
		   				   labels = scales::percent(voc_values)))

epreds |> 
	ggplot(aes(timebin, .value,
			   colour = condition,
			   fill = condition)) +
	facet_grid(lp~voc_total) +
	geom_hline(yintercept = 0,
			   linetype = "dashed") +
	geom_ribbon(aes(ymin = .lower, ymax = .upper),
				alpha = 0.5,
				linewidth = 0) +
	geom_line(linewidth = 3/4) +
	labs(x = "Time (ms)",
		 y = "Logit (Target looking)",
		 colour = "Condition",
		 fill = "Condition") +
	scale_x_continuous(breaks = seq(0, 20, 4),
					   labels = \(x) format(x*100+200, big.mark = ",")) +
	theme(legend.position = "top",
		  panel.grid.major = element_line(colour = "grey",
		  								linetype = "dotted"))
```