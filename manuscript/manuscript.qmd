---

---


```{r setup}
#| label: setup
#| echo: false
#| message: false
#| warning: false
# load objects -----------------------------------------------------------------

targets::tar_config_set(store = here::here('_targets'),
						script = here::here('_targets.R'))

targets::tar_load_globals()

targets::tar_load(c(participants, stimuli, vocabulary,
					attrition_trials, attrition_participants,
					gaze_aoi,
					data_time, data_summary))

library(knitr)
library(kableExtra)
library(ggplot2)
library(gt)


# set ggplot theme and colour palette ------------------------------------------

my_theme <- theme_minimal() +
	theme(panel.grid = element_line(colour = "grey",
									linetype = "dotted"),
		  axis.line = element_line(colour = "black"),
		  text = element_text(size = 12, colour = "black"),
		  axis.text = element_text(colour = "black"))

theme_set(my_theme)

set.seed(888)

# prepare data
attrition_participant <- attrition_participants |> 
	mutate(
		valid_status = case_when(
			!is_valid_gaze ~ "Invalid gaze",
			!is_valid_participant ~ "Invalid participant",
			TRUE ~ "Valid"
		))

participants <- participants |> 
	left_join(distinct(attrition_participants,
					   id, age_group, is_valid_participant)) |> 
	drop_na(id) |> 
	left_join(vocabulary) |> 
	mutate(prop_l1_c = scale(prop_l1)[,1])

```


# Introduction

# Methods

All materials, data, and reproducible code can be found at the OSF ([https://osf.io/hy984/](https://osf.io/ckydb/)) and GitHub ([https://github.com/gongcastro/cognate-priming](https://github.com/gongcastro/cognate-priming)) repositories. This study was conducted according to guidelines laid down in the Declaration of Helsinki, and was approved by the Drug Research Ethical Committee (CEIm) of the IMIM Parc de Salut Mar, reference 2020/9080/I. Before every testing session, caretakers were asked to read and sign an informed consent form, and were given a small gift at the end of it

## Participants

```{r}
#| label: participants-numbers
n_participants_total <- length(unique(participants$id))
n_participants_sessions <- count(participants, id, name = "n_sessions") |> 
	count(n_sessions) |> 
	split(.$n_sessions)
n_sessions_total <- count(participants)
n_sessions_age_group <- participants |> 
	group_by(age_group) |> 
	summarise(across(age, lst(mean, sd, min, max)),
			  n = n(),
			  .groups = "drop") |> 
	mutate(across(age_mean:age_max, round, 2)) |> 
	split(f = .$age_group) |> 
	set_names(c("age_21", "age_25", "age_30"))
n_sessions_dominance <- count(participants, test_language) |> 
	split(f = .$test_language) |> 
	set_names(c("catalan", "spanish"))
n_sessions_dominance_age_group <- count(participants, age_group, test_language) |> 
	split(f = .$test_language) |> 
	set_names(c("catalan", "spanish")) |> 
	map(~split(., f = .$age_group) |> 
			set_names(c("age_21", "age_25", "age_30")))
n_sessions_lp <- participants |> 
	count(lp) |> 
	split(f = .$lp) |> 
	set_names(c("monolingual", "bilingual"))
n_sessions_lp_age_group <- participants |> 
	count(lp, age_group) |> 
	split(f = .$lp) |> 
	set_names(c("monolingual", "bilingual")) |> 
	map(~split(., f = .$age_group) |> 
			set_names(c("age_21", "age_25", "age_30")))
```

We collected data from `r n_participants_total` monolingual and bilingual participants living in the Metropolitan Area of Barcelona (Spain), who were exposed to at least Catalan and/or Spanish from birth. Families were recruited from maternity room in private hospitals in Barcelona, and contacted via phone when the child's age spanned between our age intervals of interest. Families were invited to participate at three age points: 21, 25, and 30 months. `r n_participants_sessions[[1]]$n` participants were tested at one age point,  `r n_participants_sessions[[2]]$n` at two age points, and `r n_participants_sessions[[3]]$n` at the three age points. In total, we gathered data from `r n_sessions_total$n` testing sessions: `r n_sessions_age_group$age_21$n` at 21 months (*Mean* = `r round(n_sessions_age_group$age_21$age_mean, 2)`, *SD* = `r round(n_sessions_age_group$age_21$age_sd, 2)`, *Range* = `r n_sessions_age_group$age_21$age_min`--`r n_sessions_age_group$age_21$age_max`), `r n_sessions_age_group$age_25$n` at 25 months (*Mean* = `r round(n_sessions_age_group$age_25$age_mean, 2)`, *SD* = `r round(n_sessions_age_group$age_25$age_sd, 2)`, *Range* = `r n_sessions_age_group$age_25$age_min`--`r n_sessions_age_group$age_25$age_max`), and `r n_sessions_age_group$age_30$n` at 30 months (*Mean* = `r round(n_sessions_age_group$age_30$age_mean, 2)`, *SD* = `r round(n_sessions_age_group$age_25$age_sd, 2)`, *Range* = `r n_sessions_age_group$age_30$age_min`--`r n_sessions_age_group$age_30$age_max`). 

We assessed participants' language profile using the Language Exposure Questionnaire [LEQ, @bosch2001evidence]. Before each experimental session, the experimenter asked the caretakers to estimate the amount of hours per day they and other people in the infant's social circle have spent speaking to the infant in any language since birth. The output of this interview is an estimated degree of exposure (DoE) to each language, indicated by the proportion of time the infant was reported to have listened to each language. According to this estimate, we classified participants as Catalan- or Spanish-dominant if the language with highest DoE was Catalan or Spanish, respectively, and tested the participant in the stimuli set that contained words in their native language. We collected data from `r n_sessions_dominance$catalan$n` Catalan-dominant participants in Catalan (`r n_sessions_dominance_age_group$catalan$age_21$n` at 21 months, `r n_sessions_dominance_age_group$catalan$age_25$n` at 25 months, and `r n_sessions_dominance_age_group$catalan$age_30$n` at 30 months). We further classified participants as monolinguals if the DoE to their dominant language exceeded 80% of the total DoE to Catalan and Spanish, and as bilinguals otherwise. Participants with DoE to language other than Catalan or Spanish were excluded from analyses. This divided the sample into `r n_sessions_lp$monolingual$n` monolinguals (`r n_sessions_lp_age_group$monolinguals$age_21` at 21 months, `r n_sessions_lp_age_group$monolinguals$age_25` at 25 months, and `r n_sessions_lp_age_group$monolinguals$age_30` at 30 months), and `r n_sessions_lp$bilingual$n` bilinguals (`r n_sessions_lp_age_group$monolinguals$age_21` at 21 months, `r n_sessions_lp_age_group$bilingual$age_25` at 25 months, and `r n_sessions_lp_age_group$bilingual$age_30` at 30 months). @tbl-participants-lp shows a detailed description of the linguistic profile of our sample.


```{r}
#| label: tbl-participants-lp
#| tbl-cap: "Description of language profile of test participants. Data are summarised for each age group, and for monolinguals and bilinguals separately."
participants |> 
	left_join(attrition_participants,
			  by = join_by(id, 
			  			 age_group,
			  			 is_valid_participant)) |> 
	filter(is_valid_participant) |> 
	select(id, age_group, age, lp,
		   doe_catalan, doe_spanish, test_language) |> 
	mutate(id = paste0(id, " (", age_group, ")")) |>
	add_count(lp, 
			  name = "n_lp") |> 
	add_count(age_group, 
			  name = "n_age_group") |> 
	pivot_longer(starts_with("doe_"),
				 names_to = "language",
				 values_to = "doe") |>
	add_count(age_group,
			  test_language,
			  name = "n_age_test") |> 
	mutate(language = str_to_sentence(str_remove_all(language, "doe_")),
		   age_group = paste0(age_group, " (N = ", n_age_group, ")"),
		   test_language = paste0("Tested in ", test_language, 
		   					   " (N = ", n_age_test, ")"),
		   lp = factor(lp, levels = rev(unique(lp))))  |> 
	summarise(across(c(doe, age), lst(mean, sd)),
			  .by = c(age_group, lp, test_language, language)) |> 
	pivot_wider(id_cols = c(age_group, test_language),
				names_from = c(language, lp),
				values_from = c(matches("doe"), age_mean, age_sd),
				names_repair = janitor::make_clean_names) |> 
	relocate(age_group, test_language,
			 matches("monolingual"),
			 matches("bilingual")) |> 
	select(-c(age_mean_spanish_monolingual,
			  age_mean_spanish_bilingual,
			  age_sd_spanish_monolingual,
			  age_sd_spanish_bilingual)) |> 
	arrange(age_group, test_language) |> 
	gt(rowname_col = "test_language", 
	   groupname_col = "age_group", 
	   row_group.sep = ": ") |> 
	tab_spanner(md("Monolingual (*N* = 162)"), matches("monolingual")) |> 
	tab_spanner(md("Bilingual (*N* = 133)"), matches("bilingual")) |>
	fmt_number(matches("doe"), decimals = 1, scale_by = 100) |> 
	fmt_number(matches("age"), decimals = 1) |> 
	cols_merge_uncert(col_val = age_mean_catalan_monolingual, 
					  col_uncert = age_sd_catalan_monolingual) |> 
	cols_merge_uncert(col_val = age_mean_catalan_bilingual, 
					  col_uncert = age_sd_catalan_bilingual) |> 
	cols_merge_uncert(col_val = doe_mean_catalan_monolingual,
					  col_uncert = doe_sd_catalan_monolingual) |> 
	cols_merge_uncert(col_val = doe_mean_catalan_bilingual,
					  col_uncert = doe_sd_catalan_bilingual) |> 
	cols_merge_uncert(col_val = doe_mean_spanish_monolingual, 
					  col_uncert = doe_sd_spanish_monolingual) |> 
	cols_merge_uncert(col_val = doe_mean_spanish_bilingual, 
					  col_uncert = doe_sd_spanish_bilingual) |> 
	cols_label(age_mean_catalan_monolingual = "Age (months)",
			   age_mean_catalan_bilingual = "Age (months)",
			   doe_mean_catalan_monolingual = "Catalan (%)",
			   doe_mean_catalan_bilingual = "Catalan (%)",
			   doe_mean_spanish_monolingual = "Spanish (%)",
			   doe_mean_spanish_bilingual = "Spanish (%)") |> 
	tab_style(cell_text(weight = "bold"),
			  list(cells_column_spanners())) |> 
	tab_style(cell_text(size = "medium"),
			  list(cells_body(),
			  	 cells_stub()))
```


We collected vocabulary data using parental responses to the Barcelona Vocabulary Inventory [BVQ, @garcia-castro2023bvq], an online vocabulary checklist inspired in several adaptations of the the Communicative Developmental Inventory [CDI, @fenson2004variability] developed to assess the vocabulary size of Catalan-Spanish bilingual toddlers. Families received a link to the BVQ immediately after each experimental session, and were given two weeks to fill it. Two weeks after being sent the link, `r table(vocabulary$is_imputed)[2]` (`r scales::percent(table(vocabulary$is_imputed)[2]/nrow(vocabulary))` families failed to provide a complete response to the BVQ. We imputed their vocabulary size scores using multiple imputation [@vanbuuren2018flexible]. We used predictive mean matching to impute missing scores using participants' information about their age group and language profile. We obtained several receptive and expressive vocabulary size measures from each participant's vocabulary: Catalan vocabulary size (proportion of the words in the Catalan checklist reported as acquired), Spanish vocabulary size (proportion of the words in the Catalan checklist reported as acquired), and total vocabulary size (proportion of the words in both checklists reported as acquired). @tbl-participants-vocabulary shows a detailed description of participants' observed and imputed vocabulary size scores.

```{r tbl-participants-vocabulary}
participants |> 
	mutate(is_imputed = ifelse(is_imputed, "Imputed", "Observed"),
		   cat_prop = ifelse(test_language=="Catalan",
		   				  l1_prop, 
		   				  l2_prop),
		   spa_prop = ifelse(test_language=="Spanish",
		   				  l1_prop,
		   				  l2_prop)) |> 
	select(id, age_group, lp, matches("prop"), is_imputed,
		   -c(matches("l1|l2"), starts_with("te_"))) |> 
	summarise(across(matches("prop"), lst(mean, sd)),
			  .by = c(age_group, lp, is_imputed)) |> 
	pivot_wider(names_from = is_imputed,
				values_from = matches("prop"),
				names_repair = janitor::make_clean_names) |> 
	select(-matches("concept")) |> 
	arrange(age_group, lp) |> 
	gt(rowname_col = "lp",
	   groupname_col = "age_group") |> 
	fmt_number(matches("prop"), 
			   decimals = 1,
			   scale_by = 100) |> 
	cols_merge(c(total_prop_mean_observed,
				 total_prop_sd_observed), 
				 pattern = "{1} ({2})") |> 
	cols_merge(c(total_prop_mean_imputed, 
				 total_prop_sd_imputed),
				 pattern = "{1} ({2})") |> 
	cols_merge(c(cat_prop_mean_observed,
				 cat_prop_sd_observed),
				 pattern = "{1} ({2})") |> 
	cols_merge(c(cat_prop_mean_imputed, 
				 cat_prop_sd_imputed),
				 pattern = "{1} ({2})") |> 
	cols_merge(c(spa_prop_mean_observed,
				 spa_prop_sd_observed),
				 pattern = "{1} ({2})") |> 
	cols_merge(c(spa_prop_mean_imputed,
				 spa_prop_sd_imputed),
				 pattern = "{1} ({2})") |> 
	tab_spanner("Total", matches("total")) |> 
	tab_spanner("Catalan", matches("cat")) |> 
	tab_spanner("Spanish", matches("spa")) |> 
	cols_label(total_prop_mean_observed = "Observed",
			   cat_prop_mean_observed = "Observed",
			   spa_prop_mean_observed = "Observed",
			   total_prop_mean_imputed = "Imputed",
			   cat_prop_mean_imputed = "Imputed",
			   spa_prop_mean_imputed = "Imputed") |> 
	tab_style(cell_text(weight = "bold"),
			  list(cells_column_spanners())) |> 
	tab_style(cell_text(size = "medium"),
			  list(cells_body(),
			  	 cells_stub()))
```


## Stimuli

## Procedure

## Apparatus

## Data analysis

### Data processing

```{r attrition-numbers}
n_trials <- nrow(attrition_trials)
n_sessions <- distinct(attrition_trials, id, age_group) |> 
	nrow()
n_participants <- distinct(attrition_trials, id) |> 
	nrow()

n_trials_prime <- attrition_trials |> 
	filter(is_valid_gaze_prime)

n_trials_test <- n_trials_prime |> 
	filter(is_valid_gaze_test)

n_trials_each <- n_trials_test |> 
	filter(is_valid_gaze_test_each)

n_trials_participant <- n_trials_each |> 
	inner_join(filter(attrition_participants,
					  is_valid_participant),
			   by = join_by(id, age_group))

n_sessions_valid <- attrition_participants |> 
	filter(is_valid_participant)

n_participants_valid <- n_trials_participant |> 
	distinct(id)

n_longitudinal <- count(n_sessions_valid, id, name = "sessions") |> 
	count(sessions)

n_participants_include <- read_csv("data-raw/participants.csv",
								   show_col_types = FALSE)
```

We gathered data for `r format(n_trials, big.mark = ",")` trials from `r n_sessions` experimental sessions, provided by `r n_participants` distinct participants. Missing eye-tracker samples were interpolated using the last-observation-carried-forward [see @zettersten2022peekbank for a similar approach]. We excluded trials in which the participant did not fixate the prime at least half of the time of the prime phase ($\geq$750 ms, *n* = `r format(n_trials - nrow(n_trials_prime), big.mark = ",")`), or the target and distractor during the test phase ($\geq$1,000 ms, *n* = `r format(nrow(n_trials_prime) - nrow(n_trials_test), big.mark = ",")`). Additionally, we also excluded trials in which the participant failed to fixate both target *and* distractor pictures for at least 100 ms (5% of the time, `r format(nrow(n_trials_test) - nrow(n_trials_each), big.mark = ",")`). Finally we excluded trials from experimental sessions in which the participant did not provide at least two valid trials in each of the three experimental conditions (cognate prime, non-cognate prime, and unrelated prime) which resulted in the exclusion of `r nrow(distinct(n_trials_each, id, age_group)) - nrow(n_sessions_valid)` experimental sessions and their `r nrow(n_trials_each) - nrow(n_trials_participant)` remaining trials. The final data set comprised `r format(sum(data_summary$.ntrials), big.mark = ",")` from `r n_sessions_valid` experimental sessions, provided by `r n_participants_valid` distinct participants. Of those participants, `r n_longitudinal[1]` provided data from one experimental session, `r n_longitudinal[2]` provided data from two experimental sessions, and `r n_longitudinal[1]` provided data from three experimental sessions.

We defined our time window of interest from 300 ms after the onset of the test phase (target and distractor presentation) until the end of the test phase (2,000 ms). For each trial, we chunked the time domain into 17 time bins of 100 ms of duration. We then calculated, for each experimental session, time bin, and condition, participant's proportion of target and distractor fixations. Finally, we computed the empirical log-odds of target and distractor fixations, which we introduced in the statistical analyses as our response variable.


```{r} 
#| label: tbl-attrition-group
#| tbl-cap: "Summary of the dataset."
attrition_trials |> 
	left_join(select(participants, age_group, lp, id, date_test),
			  by = join_by(id, age_group)) |> 
	left_join(attrition_participants,
			  by = join_by(id, age_group)) |> 
	add_count(age_group, lp, name = "n_trials") |> 
	summarise(valid_trial_count = sum(is_valid_trial, na.rm = TRUE),
			  .by = c(id, lp, trial_type, date_test,
			  		age_group, is_valid_participant, n_trials)) |> 
	pivot_wider(names_from = trial_type, 
				values_from = valid_trial_count, 
				values_fill = 0,
				names_repair = janitor::make_clean_names) |> 
	rename(noncognate = non_cognate) |> 
	add_count(lp, age_group) |>
	summarise(across(c(cognate, noncognate, unrelated),
					 lst(sum, mean, sd)),
			  n_valid = sum(is_valid_participant),
			  .by = c(lp, age_group, n, n_trials)) |>
	relocate(n_valid, .after = n) |> 
	mutate(n_prop = n_valid/n) |> 
	arrange(age_group, lp) |> 
	relocate(age_group, lp, n_valid, n_prop, 
			 matches("cognate"),
			 matches("noncognate"),
			 matches("unrelated")) |> 
	gt(groupname_col = "age_group",
	   rowname_col = "lp")  |>
	cols_hide(c(n, n_trials)) |> 
	fmt_number(matches("_mean|_sd"), 
			   decimals = 1) |>
	fmt_percent(matches("_prop"),
				decimals = 1) |> 
	cols_merge_n_pct(col_n = n_valid, 
					 col_pct = n_prop,
					 autohide = TRUE)  |> 
	tab_spanner("Non-cognate", matches("noncognate")) |>
	tab_spanner("Cognate", starts_with("cognate")) |>
	tab_spanner("Unrelated", matches("unrelated")) |>
	tab_spanner("Related", matches("cognate")) |> 
	cols_merge_uncert(col_val = cognate_mean,
					  col_uncert = cognate_sd) |> 
	cols_merge_uncert(col_val = noncognate_mean,
					  col_uncert = noncognate_sd) |> 
	cols_merge_uncert(col_val = unrelated_mean, 
					  col_uncert = unrelated_sd) |> 
	cols_label(age_group = "Age",
			   n_valid = "Participants (included)",
			   cognate_sum = "Trials",
			   cognate_mean = "Mean ± SD",
			   noncognate_sum = "Trials",
			   noncognate_mean = "Mean ± SD",
			   unrelated_sum = "Trials",
			   unrelated_mean = "Mean ± SD") |> 
	summary_rows(groups = TRUE,
				 columns = where(is.integer),
				 fns = list("Sum" = "sum"),
				 fmt = fmt_number,
				 decimals = 0) |>
	summary_rows(groups = TRUE,
				 columns = c(where(is.numeric), -n_valid),
				 fns = list("Mean" = "mean"),
				 fmt = fmt_number,
				 decimals = 1) |>
	grand_summary_rows(columns = where(is.integer),
					   fns = list("N" = "sum"),
					   formatter = fmt_integer) 
```


# Results

# Discussion
